// <auto-generated />
using System;
using Alarme.Infra.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alarme.Infra.Migrations
{
    [DbContext(typeof(AlarmeContext))]
    partial class AlarmeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alarme.Domain.Entidades.Alarme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Alarmes");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.AlarmeAutuado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("IdAlarme")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdAlarme")
                        .IsUnique();

                    b.ToTable("AlarmesAtuados");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.AlarmeEquipamento", b =>
                {
                    b.Property<Guid>("IdAlarme")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEquipamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.HasKey("IdAlarme", "IdEquipamento");

                    b.HasAlternateKey("TempId");

                    b.HasIndex("IdEquipamento");

                    b.ToTable("AlarmeEquipamentos");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.Equipamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.AlarmeAutuado", b =>
                {
                    b.HasOne("Alarme.Domain.Entidades.Alarme", "Alarme")
                        .WithOne("AlarmesAutuados")
                        .HasForeignKey("Alarme.Domain.Entidades.AlarmeAutuado", "IdAlarme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alarme");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.AlarmeEquipamento", b =>
                {
                    b.HasOne("Alarme.Domain.Entidades.Alarme", "Alarme")
                        .WithMany("AlarmeEquipamentos")
                        .HasForeignKey("IdAlarme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alarme.Domain.Entidades.Equipamento", "Equipamento")
                        .WithMany("AlarmeEquipamentos")
                        .HasForeignKey("IdEquipamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alarme");

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.Alarme", b =>
                {
                    b.Navigation("AlarmeEquipamentos");

                    b.Navigation("AlarmesAutuados");
                });

            modelBuilder.Entity("Alarme.Domain.Entidades.Equipamento", b =>
                {
                    b.Navigation("AlarmeEquipamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
